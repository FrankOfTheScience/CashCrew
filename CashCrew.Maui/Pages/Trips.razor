@page "/trips"
@inject TripService TripService

<h1>Trips</h1>

@if (trips is null || !trips.Any())
{
    <span>There aren't any Trips yet!</span>
    <br />
    <button class="btn btn-primary" @onclick="ShowCreateTripPopup">Create New Trip</button>
}
else
{
    <button class="btn btn-primary mb-3" @onclick="ShowCreateTripPopup">Create New Trip</button>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Country</th>
                <th>Crew Mates</th>
                <th>Adventure Days</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var trip in trips)
            {
                <tr>
                    <td>@trip.Name</td>
                    <td>@trip.Country</td>
                    <td>@trip.CrewMates</td>
                    <td>@trip.AdventureDays</td>
                    <td>
                        <button class="btn btn-sm btn-primary" @onclick="() => ShowEditTripPopup(trip)">Edit</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => DeleteTrip(trip.Name)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<PartialEditTripPopup @ref="editTripPopup" />

@code {
    private IEnumerable<TripDTO>? trips = null;
    private PartialEditTripPopup? editTripPopup;

    protected override async Task OnInitializedAsync()
    {
        await LoadTrips();
    }

    private async Task LoadTrips()
    {
        trips = await TripService.GetTripsAsync();
    }

    private async Task ShowCreateTripPopup()
    {
        if (editTripPopup != null)
        {
            await editTripPopup.ShowAsync(false, new TripDTO());
        }
    }

    private async Task ShowEditTripPopup(TripDTO trip)
    {
        if (editTripPopup != null)
        {
            await editTripPopup.ShowAsync(true, trip);
        }
    }

    private async Task DeleteTrip(string tripName)
    {
        await TripService.DeleteExistingTripAsync(tripName);
    }
}

    
